
205024U_Fernando WNM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000062e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  0000062e  000006c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  008000c2  008000c2  00000724  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000754  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c25  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006fa  00000000  00000000  0000140d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000049d  00000000  00000000  00001b07  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00001fa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044d  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000051c  00000000  00000000  000024c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000029dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3c       	cpi	r26, 0xC2	; 194
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 ec       	ldi	r26, 0xC2	; 194
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 3e       	cpi	r26, 0xE7	; 231
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  8a:	0c 94 15 03 	jmp	0x62a	; 0x62a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_Init>:
}

void USART_TxNumber(int32_t number,uint8_t dtype){
	
	itoa(number,num,dtype);
	USART_TxString(num);
  92:	9c 01       	movw	r18, r24
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	50 e0       	ldi	r21, 0x00	; 0
  98:	60 e2       	ldi	r22, 0x20	; 32
  9a:	71 ea       	ldi	r23, 0xA1	; 161
  9c:	87 e0       	ldi	r24, 0x07	; 7
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__divmodsi4>
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	31 09       	sbc	r19, r1
  a8:	30 bd       	out	0x20, r19	; 32
  aa:	29 b9       	out	0x09, r18	; 9
  ac:	88 e1       	ldi	r24, 0x18	; 24
  ae:	8a b9       	out	0x0a, r24	; 10
  b0:	8e e8       	ldi	r24, 0x8E	; 142
  b2:	80 bd       	out	0x20, r24	; 32
  b4:	78 94       	sei
  b6:	08 95       	ret

000000b8 <USART_Transmit>:
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <USART_Transmit>
  bc:	8c b9       	out	0x0c, r24	; 12
  be:	08 95       	ret

000000c0 <USART_TxStringln>:
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	ec 01       	movw	r28, r24
  c6:	03 c0       	rjmp	.+6      	; 0xce <USART_TxStringln+0xe>
  c8:	21 96       	adiw	r28, 0x01	; 1
  ca:	0e 94 5c 00 	call	0xb8	; 0xb8 <USART_Transmit>
  ce:	88 81       	ld	r24, Y
  d0:	81 11       	cpse	r24, r1
  d2:	fa cf       	rjmp	.-12     	; 0xc8 <USART_TxStringln+0x8>
  d4:	8d e0       	ldi	r24, 0x0D	; 13
  d6:	0e 94 5c 00 	call	0xb8	; 0xb8 <USART_Transmit>
  da:	df 91       	pop	r29
  dc:	cf 91       	pop	r28
  de:	08 95       	ret

000000e0 <__vector_13>:
	
}



ISR(USART_RXC_vect){//A,B,C,D ???
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	8f 93       	push	r24
	
 rchar=UDR;
  ec:	8c b1       	in	r24, 0x0c	; 12
  ee:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <rchar>
	

	
		
}
  f2:	8f 91       	pop	r24
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <main>:
uint16_t ultraRightH=0;
char sendData[30];
	
int main(void)
{
    USART_Init(9600);
  fe:	80 e8       	ldi	r24, 0x80	; 128
 100:	95 e2       	ldi	r25, 0x25	; 37
 102:	0e 94 49 00 	call	0x92	; 0x92 <USART_Init>
	
	/*Ultrasonic Timer Part*/
	DDRC|=(1<<2); 
 106:	84 b3       	in	r24, 0x14	; 20
 108:	84 60       	ori	r24, 0x04	; 4
 10a:	84 bb       	out	0x14, r24	; 20
	TCCR0|=(1<<WGM01);
 10c:	83 b7       	in	r24, 0x33	; 51
 10e:	88 60       	ori	r24, 0x08	; 8
 110:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);
 112:	83 b7       	in	r24, 0x33	; 51
 114:	82 60       	ori	r24, 0x02	; 2
 116:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
 118:	12 be       	out	0x32, r1	; 50
	OCR0=10;
 11a:	8a e0       	ldi	r24, 0x0A	; 10
 11c:	8c bf       	out	0x3c, r24	; 60
	
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	
	TIMSK|=(1<<OCIE0);
 11e:	89 b7       	in	r24, 0x39	; 57
 120:	82 60       	ori	r24, 0x02	; 2
 122:	89 bf       	out	0x39, r24	; 57
	sei(); 
 124:	78 94       	sei
	
	
    while (1) 
    {
		PORTC&=~(1<<2);
 126:	85 b3       	in	r24, 0x15	; 21
 128:	8b 7f       	andi	r24, 0xFB	; 251
 12a:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12c:	25 e8       	ldi	r18, 0x85	; 133
 12e:	2a 95       	dec	r18
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0x30>
 132:	00 00       	nop
		_delay_us(50);
		PORTC|=(1<<2);
 134:	85 b3       	in	r24, 0x15	; 21
 136:	84 60       	ori	r24, 0x04	; 4
 138:	85 bb       	out	0x15, r24	; 21
 13a:	35 e8       	ldi	r19, 0x85	; 133
 13c:	3a 95       	dec	r19
 13e:	f1 f7       	brne	.-4      	; 0x13c <main+0x3e>
 140:	00 00       	nop
		_delay_us(50);
		PORTC&=~(1<<2);
 142:	85 b3       	in	r24, 0x15	; 21
 144:	8b 7f       	andi	r24, 0xFB	; 251
 146:	85 bb       	out	0x15, r24	; 21
		
		while(!(PINC&(1<<3)))
 148:	04 c0       	rjmp	.+8      	; 0x152 <main+0x54>
			TimerCal=0;
 14a:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <TimerCal+0x1>
 14e:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <TimerCal>
		_delay_us(50);
		PORTC|=(1<<2);
		_delay_us(50);
		PORTC&=~(1<<2);
		
		while(!(PINC&(1<<3)))
 152:	9b 9b       	sbis	0x13, 3	; 19
 154:	fa cf       	rjmp	.-12     	; 0x14a <main+0x4c>
 156:	14 c0       	rjmp	.+40     	; 0x180 <main+0x82>
			TimerCal=0;
		while((PINC&(1<<3)))
			ultraLeftP=TimerCal/4.1375;
 158:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <TimerCal>
 15c:	70 91 c7 00 	lds	r23, 0x00C7	; 0x8000c7 <TimerCal+0x1>
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 46 02 	call	0x48c	; 0x48c <__floatunsisf>
 168:	26 e6       	ldi	r18, 0x66	; 102
 16a:	36 e6       	ldi	r19, 0x66	; 102
 16c:	44 e8       	ldi	r20, 0x84	; 132
 16e:	50 e4       	ldi	r21, 0x40	; 64
 170:	0e 94 a5 01 	call	0x34a	; 0x34a <__divsf3>
 174:	0e 94 17 02 	call	0x42e	; 0x42e <__fixunssfsi>
 178:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <ultraLeftP+0x1>
 17c:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <ultraLeftP>
		_delay_us(50);
		PORTC&=~(1<<2);
		
		while(!(PINC&(1<<3)))
			TimerCal=0;
		while((PINC&(1<<3)))
 180:	9b 99       	sbic	0x13, 3	; 19
 182:	ea cf       	rjmp	.-44     	; 0x158 <main+0x5a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 184:	8f e7       	ldi	r24, 0x7F	; 127
 186:	98 e3       	ldi	r25, 0x38	; 56
 188:	21 e0       	ldi	r18, 0x01	; 1
 18a:	81 50       	subi	r24, 0x01	; 1
 18c:	90 40       	sbci	r25, 0x00	; 0
 18e:	20 40       	sbci	r18, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x8c>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x96>
 194:	00 00       	nop
			ultraLeftP=TimerCal/4.1375;
		
		_delay_ms(50);
		
		PORTC&=~(1<<2);
 196:	85 b3       	in	r24, 0x15	; 21
 198:	8b 7f       	andi	r24, 0xFB	; 251
 19a:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19c:	35 e8       	ldi	r19, 0x85	; 133
 19e:	3a 95       	dec	r19
 1a0:	f1 f7       	brne	.-4      	; 0x19e <main+0xa0>
 1a2:	00 00       	nop
		_delay_us(50);
		PORTC|=(1<<2);
 1a4:	85 b3       	in	r24, 0x15	; 21
 1a6:	84 60       	ori	r24, 0x04	; 4
 1a8:	85 bb       	out	0x15, r24	; 21
 1aa:	85 e8       	ldi	r24, 0x85	; 133
 1ac:	8a 95       	dec	r24
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0xae>
 1b0:	00 00       	nop
		_delay_us(50);
		PORTC&=~(1<<2);
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	8b 7f       	andi	r24, 0xFB	; 251
 1b6:	85 bb       	out	0x15, r24	; 21
		
		while(!(PINC&(1<<4)))
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <main+0xc4>
			TimerCal=0;
 1ba:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <TimerCal+0x1>
 1be:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <TimerCal>
		_delay_us(50);
		PORTC|=(1<<2);
		_delay_us(50);
		PORTC&=~(1<<2);
		
		while(!(PINC&(1<<4)))
 1c2:	9c 9b       	sbis	0x13, 4	; 19
 1c4:	fa cf       	rjmp	.-12     	; 0x1ba <main+0xbc>
 1c6:	14 c0       	rjmp	.+40     	; 0x1f0 <main+0xf2>
			TimerCal=0;
		while((PINC&(1<<4)))
			ultraRightH=TimerCal/4.1375;
 1c8:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <TimerCal>
 1cc:	70 91 c7 00 	lds	r23, 0x00C7	; 0x8000c7 <TimerCal+0x1>
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 46 02 	call	0x48c	; 0x48c <__floatunsisf>
 1d8:	26 e6       	ldi	r18, 0x66	; 102
 1da:	36 e6       	ldi	r19, 0x66	; 102
 1dc:	44 e8       	ldi	r20, 0x84	; 132
 1de:	50 e4       	ldi	r21, 0x40	; 64
 1e0:	0e 94 a5 01 	call	0x34a	; 0x34a <__divsf3>
 1e4:	0e 94 17 02 	call	0x42e	; 0x42e <__fixunssfsi>
 1e8:	70 93 c3 00 	sts	0x00C3, r23	; 0x8000c3 <__data_end+0x1>
 1ec:	60 93 c2 00 	sts	0x00C2, r22	; 0x8000c2 <__data_end>
		_delay_us(50);
		PORTC&=~(1<<2);
		
		while(!(PINC&(1<<4)))
			TimerCal=0;
		while((PINC&(1<<4)))
 1f0:	9c 99       	sbic	0x13, 4	; 19
 1f2:	ea cf       	rjmp	.-44     	; 0x1c8 <main+0xca>
			ultraRightH=TimerCal/4.1375;
		
		if ((ultraLeftP<50)&&(ultraRightH>49))
 1f4:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <ultraLeftP>
 1f8:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <ultraLeftP+0x1>
 1fc:	82 33       	cpi	r24, 0x32	; 50
 1fe:	91 05       	cpc	r25, r1
 200:	88 f4       	brcc	.+34     	; 0x224 <main+0x126>
 202:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <__data_end>
 206:	30 91 c3 00 	lds	r19, 0x00C3	; 0x8000c3 <__data_end+0x1>
 20a:	22 33       	cpi	r18, 0x32	; 50
 20c:	31 05       	cpc	r19, r1
 20e:	50 f0       	brcs	.+20     	; 0x224 <main+0x126>
		{
			sprintf(sendData,"Pens bin is filled");
 210:	83 e1       	ldi	r24, 0x13	; 19
 212:	e0 e6       	ldi	r30, 0x60	; 96
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	a9 ec       	ldi	r26, 0xC9	; 201
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	01 90       	ld	r0, Z+
 21c:	0d 92       	st	X+, r0
 21e:	8a 95       	dec	r24
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x11c>
 222:	22 c0       	rjmp	.+68     	; 0x268 <main+0x16a>
			
		}
		else if ((ultraRightH<50)&&(ultraLeftP>49)){
 224:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <__data_end>
 228:	30 91 c3 00 	lds	r19, 0x00C3	; 0x8000c3 <__data_end+0x1>
 22c:	22 33       	cpi	r18, 0x32	; 50
 22e:	31 05       	cpc	r19, r1
 230:	68 f4       	brcc	.+26     	; 0x24c <main+0x14e>
 232:	82 33       	cpi	r24, 0x32	; 50
 234:	91 05       	cpc	r25, r1
 236:	50 f0       	brcs	.+20     	; 0x24c <main+0x14e>
			sprintf(sendData,"Highlighters bin is filled");
 238:	8b e1       	ldi	r24, 0x1B	; 27
 23a:	e3 e7       	ldi	r30, 0x73	; 115
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	a9 ec       	ldi	r26, 0xC9	; 201
 240:	b0 e0       	ldi	r27, 0x00	; 0
 242:	01 90       	ld	r0, Z+
 244:	0d 92       	st	X+, r0
 246:	8a 95       	dec	r24
 248:	e1 f7       	brne	.-8      	; 0x242 <main+0x144>
 24a:	0e c0       	rjmp	.+28     	; 0x268 <main+0x16a>
		}
		else if ((ultraRightH<50)&&(ultraLeftP<50)){
 24c:	22 33       	cpi	r18, 0x32	; 50
 24e:	31 05       	cpc	r19, r1
 250:	58 f4       	brcc	.+22     	; 0x268 <main+0x16a>
 252:	c2 97       	sbiw	r24, 0x32	; 50
 254:	48 f4       	brcc	.+18     	; 0x268 <main+0x16a>
			sprintf(sendData,"Bins are filled");
 256:	80 e1       	ldi	r24, 0x10	; 16
 258:	ee e8       	ldi	r30, 0x8E	; 142
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	a9 ec       	ldi	r26, 0xC9	; 201
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	01 90       	ld	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	8a 95       	dec	r24
 266:	e1 f7       	brne	.-8      	; 0x260 <main+0x162>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 268:	9f e7       	ldi	r25, 0x7F	; 127
 26a:	28 e3       	ldi	r18, 0x38	; 56
 26c:	31 e0       	ldi	r19, 0x01	; 1
 26e:	91 50       	subi	r25, 0x01	; 1
 270:	20 40       	sbci	r18, 0x00	; 0
 272:	30 40       	sbci	r19, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <main+0x170>
 276:	00 c0       	rjmp	.+0      	; 0x278 <main+0x17a>
 278:	00 00       	nop
		}
		_delay_ms(50);
	
	
	USART_TxStringln("AT");
 27a:	8e e9       	ldi	r24, 0x9E	; 158
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_TxStringln>
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	94 e3       	ldi	r25, 0x34	; 52
 286:	2c e0       	ldi	r18, 0x0C	; 12
 288:	81 50       	subi	r24, 0x01	; 1
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	20 40       	sbci	r18, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <main+0x18a>
 290:	00 c0       	rjmp	.+0      	; 0x292 <main+0x194>
 292:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT");
 294:	8e e9       	ldi	r24, 0x9E	; 158
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_TxStringln>
 29c:	3f ef       	ldi	r19, 0xFF	; 255
 29e:	84 e3       	ldi	r24, 0x34	; 52
 2a0:	9c e0       	ldi	r25, 0x0C	; 12
 2a2:	31 50       	subi	r19, 0x01	; 1
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	90 40       	sbci	r25, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0x1a4>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0x1ae>
 2ac:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT+CMGF=1");
 2ae:	81 ea       	ldi	r24, 0xA1	; 161
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_TxStringln>
 2b6:	2f ef       	ldi	r18, 0xFF	; 255
 2b8:	34 e3       	ldi	r19, 0x34	; 52
 2ba:	8c e0       	ldi	r24, 0x0C	; 12
 2bc:	21 50       	subi	r18, 0x01	; 1
 2be:	30 40       	sbci	r19, 0x00	; 0
 2c0:	80 40       	sbci	r24, 0x00	; 0
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <main+0x1be>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x1c8>
 2c6:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT+CMGS=\"+94772562509\"");
 2c8:	8b ea       	ldi	r24, 0xAB	; 171
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_TxStringln>
 2d0:	9f ef       	ldi	r25, 0xFF	; 255
 2d2:	24 e3       	ldi	r18, 0x34	; 52
 2d4:	3c e0       	ldi	r19, 0x0C	; 12
 2d6:	91 50       	subi	r25, 0x01	; 1
 2d8:	20 40       	sbci	r18, 0x00	; 0
 2da:	30 40       	sbci	r19, 0x00	; 0
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <main+0x1d8>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0x1e2>
 2e0:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln(sendData);
 2e2:	89 ec       	ldi	r24, 0xC9	; 201
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_TxStringln>
 2ea:	8f ef       	ldi	r24, 0xFF	; 255
 2ec:	94 e3       	ldi	r25, 0x34	; 52
 2ee:	2c e0       	ldi	r18, 0x0C	; 12
 2f0:	81 50       	subi	r24, 0x01	; 1
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	20 40       	sbci	r18, 0x00	; 0
 2f6:	e1 f7       	brne	.-8      	; 0x2f0 <main+0x1f2>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <main+0x1fc>
 2fa:	00 00       	nop
	_delay_ms(500);
	USART_Transmit(26);
 2fc:	8a e1       	ldi	r24, 0x1A	; 26
 2fe:	0e 94 5c 00 	call	0xb8	; 0xb8 <USART_Transmit>
 302:	3f ef       	ldi	r19, 0xFF	; 255
 304:	89 e5       	ldi	r24, 0x59	; 89
 306:	92 e6       	ldi	r25, 0x62	; 98
 308:	22 e0       	ldi	r18, 0x02	; 2
 30a:	31 50       	subi	r19, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	20 40       	sbci	r18, 0x00	; 0
 312:	d9 f7       	brne	.-10     	; 0x30a <main+0x20c>
 314:	00 c0       	rjmp	.+0      	; 0x316 <main+0x218>
 316:	00 00       	nop
 318:	06 cf       	rjmp	.-500    	; 0x126 <main+0x28>

0000031a <__vector_10>:
	_delay_ms(30000);
	
}
}

ISR(TIMER0_COMP_vect){//ultrasonic
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
	TimerCal++;
 328:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <TimerCal>
 32c:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <TimerCal+0x1>
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <TimerCal+0x1>
 336:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <TimerCal>
	TCNT0=0;
 33a:	12 be       	out	0x32, r1	; 50
}
 33c:	9f 91       	pop	r25
 33e:	8f 91       	pop	r24
 340:	0f 90       	pop	r0
 342:	0f be       	out	0x3f, r0	; 63
 344:	0f 90       	pop	r0
 346:	1f 90       	pop	r1
 348:	18 95       	reti

0000034a <__divsf3>:
 34a:	0e 94 b9 01 	call	0x372	; 0x372 <__divsf3x>
 34e:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_round>
 352:	0e 94 93 02 	call	0x526	; 0x526 <__fp_pscB>
 356:	58 f0       	brcs	.+22     	; 0x36e <__divsf3+0x24>
 358:	0e 94 8c 02 	call	0x518	; 0x518 <__fp_pscA>
 35c:	40 f0       	brcs	.+16     	; 0x36e <__divsf3+0x24>
 35e:	29 f4       	brne	.+10     	; 0x36a <__divsf3+0x20>
 360:	5f 3f       	cpi	r21, 0xFF	; 255
 362:	29 f0       	breq	.+10     	; 0x36e <__divsf3+0x24>
 364:	0c 94 83 02 	jmp	0x506	; 0x506 <__fp_inf>
 368:	51 11       	cpse	r21, r1
 36a:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_szero>
 36e:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_nan>

00000372 <__divsf3x>:
 372:	0e 94 ab 02 	call	0x556	; 0x556 <__fp_split3>
 376:	68 f3       	brcs	.-38     	; 0x352 <__divsf3+0x8>

00000378 <__divsf3_pse>:
 378:	99 23       	and	r25, r25
 37a:	b1 f3       	breq	.-20     	; 0x368 <__divsf3+0x1e>
 37c:	55 23       	and	r21, r21
 37e:	91 f3       	breq	.-28     	; 0x364 <__divsf3+0x1a>
 380:	95 1b       	sub	r25, r21
 382:	55 0b       	sbc	r21, r21
 384:	bb 27       	eor	r27, r27
 386:	aa 27       	eor	r26, r26
 388:	62 17       	cp	r22, r18
 38a:	73 07       	cpc	r23, r19
 38c:	84 07       	cpc	r24, r20
 38e:	38 f0       	brcs	.+14     	; 0x39e <__divsf3_pse+0x26>
 390:	9f 5f       	subi	r25, 0xFF	; 255
 392:	5f 4f       	sbci	r21, 0xFF	; 255
 394:	22 0f       	add	r18, r18
 396:	33 1f       	adc	r19, r19
 398:	44 1f       	adc	r20, r20
 39a:	aa 1f       	adc	r26, r26
 39c:	a9 f3       	breq	.-22     	; 0x388 <__divsf3_pse+0x10>
 39e:	35 d0       	rcall	.+106    	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3a0:	0e 2e       	mov	r0, r30
 3a2:	3a f0       	brmi	.+14     	; 0x3b2 <__divsf3_pse+0x3a>
 3a4:	e0 e8       	ldi	r30, 0x80	; 128
 3a6:	32 d0       	rcall	.+100    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3a8:	91 50       	subi	r25, 0x01	; 1
 3aa:	50 40       	sbci	r21, 0x00	; 0
 3ac:	e6 95       	lsr	r30
 3ae:	00 1c       	adc	r0, r0
 3b0:	ca f7       	brpl	.-14     	; 0x3a4 <__divsf3_pse+0x2c>
 3b2:	2b d0       	rcall	.+86     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3b4:	fe 2f       	mov	r31, r30
 3b6:	29 d0       	rcall	.+82     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3b8:	66 0f       	add	r22, r22
 3ba:	77 1f       	adc	r23, r23
 3bc:	88 1f       	adc	r24, r24
 3be:	bb 1f       	adc	r27, r27
 3c0:	26 17       	cp	r18, r22
 3c2:	37 07       	cpc	r19, r23
 3c4:	48 07       	cpc	r20, r24
 3c6:	ab 07       	cpc	r26, r27
 3c8:	b0 e8       	ldi	r27, 0x80	; 128
 3ca:	09 f0       	breq	.+2      	; 0x3ce <__divsf3_pse+0x56>
 3cc:	bb 0b       	sbc	r27, r27
 3ce:	80 2d       	mov	r24, r0
 3d0:	bf 01       	movw	r22, r30
 3d2:	ff 27       	eor	r31, r31
 3d4:	93 58       	subi	r25, 0x83	; 131
 3d6:	5f 4f       	sbci	r21, 0xFF	; 255
 3d8:	3a f0       	brmi	.+14     	; 0x3e8 <__divsf3_pse+0x70>
 3da:	9e 3f       	cpi	r25, 0xFE	; 254
 3dc:	51 05       	cpc	r21, r1
 3de:	78 f0       	brcs	.+30     	; 0x3fe <__divsf3_pse+0x86>
 3e0:	0c 94 83 02 	jmp	0x506	; 0x506 <__fp_inf>
 3e4:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_szero>
 3e8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ea:	e4 f3       	brlt	.-8      	; 0x3e4 <__divsf3_pse+0x6c>
 3ec:	98 3e       	cpi	r25, 0xE8	; 232
 3ee:	d4 f3       	brlt	.-12     	; 0x3e4 <__divsf3_pse+0x6c>
 3f0:	86 95       	lsr	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	9f 5f       	subi	r25, 0xFF	; 255
 3fc:	c9 f7       	brne	.-14     	; 0x3f0 <__divsf3_pse+0x78>
 3fe:	88 0f       	add	r24, r24
 400:	91 1d       	adc	r25, r1
 402:	96 95       	lsr	r25
 404:	87 95       	ror	r24
 406:	97 f9       	bld	r25, 7
 408:	08 95       	ret
 40a:	e1 e0       	ldi	r30, 0x01	; 1
 40c:	66 0f       	add	r22, r22
 40e:	77 1f       	adc	r23, r23
 410:	88 1f       	adc	r24, r24
 412:	bb 1f       	adc	r27, r27
 414:	62 17       	cp	r22, r18
 416:	73 07       	cpc	r23, r19
 418:	84 07       	cpc	r24, r20
 41a:	ba 07       	cpc	r27, r26
 41c:	20 f0       	brcs	.+8      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41e:	62 1b       	sub	r22, r18
 420:	73 0b       	sbc	r23, r19
 422:	84 0b       	sbc	r24, r20
 424:	ba 0b       	sbc	r27, r26
 426:	ee 1f       	adc	r30, r30
 428:	88 f7       	brcc	.-30     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 42a:	e0 95       	com	r30
 42c:	08 95       	ret

0000042e <__fixunssfsi>:
 42e:	0e 94 b3 02 	call	0x566	; 0x566 <__fp_splitA>
 432:	88 f0       	brcs	.+34     	; 0x456 <__fixunssfsi+0x28>
 434:	9f 57       	subi	r25, 0x7F	; 127
 436:	98 f0       	brcs	.+38     	; 0x45e <__fixunssfsi+0x30>
 438:	b9 2f       	mov	r27, r25
 43a:	99 27       	eor	r25, r25
 43c:	b7 51       	subi	r27, 0x17	; 23
 43e:	b0 f0       	brcs	.+44     	; 0x46c <__fixunssfsi+0x3e>
 440:	e1 f0       	breq	.+56     	; 0x47a <__fixunssfsi+0x4c>
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	1a f0       	brmi	.+6      	; 0x452 <__fixunssfsi+0x24>
 44c:	ba 95       	dec	r27
 44e:	c9 f7       	brne	.-14     	; 0x442 <__fixunssfsi+0x14>
 450:	14 c0       	rjmp	.+40     	; 0x47a <__fixunssfsi+0x4c>
 452:	b1 30       	cpi	r27, 0x01	; 1
 454:	91 f0       	breq	.+36     	; 0x47a <__fixunssfsi+0x4c>
 456:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_zero>
 45a:	b1 e0       	ldi	r27, 0x01	; 1
 45c:	08 95       	ret
 45e:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_zero>
 462:	67 2f       	mov	r22, r23
 464:	78 2f       	mov	r23, r24
 466:	88 27       	eor	r24, r24
 468:	b8 5f       	subi	r27, 0xF8	; 248
 46a:	39 f0       	breq	.+14     	; 0x47a <__fixunssfsi+0x4c>
 46c:	b9 3f       	cpi	r27, 0xF9	; 249
 46e:	cc f3       	brlt	.-14     	; 0x462 <__fixunssfsi+0x34>
 470:	86 95       	lsr	r24
 472:	77 95       	ror	r23
 474:	67 95       	ror	r22
 476:	b3 95       	inc	r27
 478:	d9 f7       	brne	.-10     	; 0x470 <__fixunssfsi+0x42>
 47a:	3e f4       	brtc	.+14     	; 0x48a <__fixunssfsi+0x5c>
 47c:	90 95       	com	r25
 47e:	80 95       	com	r24
 480:	70 95       	com	r23
 482:	61 95       	neg	r22
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	8f 4f       	sbci	r24, 0xFF	; 255
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	08 95       	ret

0000048c <__floatunsisf>:
 48c:	e8 94       	clt
 48e:	09 c0       	rjmp	.+18     	; 0x4a2 <__floatsisf+0x12>

00000490 <__floatsisf>:
 490:	97 fb       	bst	r25, 7
 492:	3e f4       	brtc	.+14     	; 0x4a2 <__floatsisf+0x12>
 494:	90 95       	com	r25
 496:	80 95       	com	r24
 498:	70 95       	com	r23
 49a:	61 95       	neg	r22
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	99 23       	and	r25, r25
 4a4:	a9 f0       	breq	.+42     	; 0x4d0 <__floatsisf+0x40>
 4a6:	f9 2f       	mov	r31, r25
 4a8:	96 e9       	ldi	r25, 0x96	; 150
 4aa:	bb 27       	eor	r27, r27
 4ac:	93 95       	inc	r25
 4ae:	f6 95       	lsr	r31
 4b0:	87 95       	ror	r24
 4b2:	77 95       	ror	r23
 4b4:	67 95       	ror	r22
 4b6:	b7 95       	ror	r27
 4b8:	f1 11       	cpse	r31, r1
 4ba:	f8 cf       	rjmp	.-16     	; 0x4ac <__floatsisf+0x1c>
 4bc:	fa f4       	brpl	.+62     	; 0x4fc <__floatsisf+0x6c>
 4be:	bb 0f       	add	r27, r27
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <__floatsisf+0x36>
 4c2:	60 ff       	sbrs	r22, 0
 4c4:	1b c0       	rjmp	.+54     	; 0x4fc <__floatsisf+0x6c>
 4c6:	6f 5f       	subi	r22, 0xFF	; 255
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	16 c0       	rjmp	.+44     	; 0x4fc <__floatsisf+0x6c>
 4d0:	88 23       	and	r24, r24
 4d2:	11 f0       	breq	.+4      	; 0x4d8 <__floatsisf+0x48>
 4d4:	96 e9       	ldi	r25, 0x96	; 150
 4d6:	11 c0       	rjmp	.+34     	; 0x4fa <__floatsisf+0x6a>
 4d8:	77 23       	and	r23, r23
 4da:	21 f0       	breq	.+8      	; 0x4e4 <__floatsisf+0x54>
 4dc:	9e e8       	ldi	r25, 0x8E	; 142
 4de:	87 2f       	mov	r24, r23
 4e0:	76 2f       	mov	r23, r22
 4e2:	05 c0       	rjmp	.+10     	; 0x4ee <__floatsisf+0x5e>
 4e4:	66 23       	and	r22, r22
 4e6:	71 f0       	breq	.+28     	; 0x504 <__floatsisf+0x74>
 4e8:	96 e8       	ldi	r25, 0x86	; 134
 4ea:	86 2f       	mov	r24, r22
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	2a f0       	brmi	.+10     	; 0x4fc <__floatsisf+0x6c>
 4f2:	9a 95       	dec	r25
 4f4:	66 0f       	add	r22, r22
 4f6:	77 1f       	adc	r23, r23
 4f8:	88 1f       	adc	r24, r24
 4fa:	da f7       	brpl	.-10     	; 0x4f2 <__floatsisf+0x62>
 4fc:	88 0f       	add	r24, r24
 4fe:	96 95       	lsr	r25
 500:	87 95       	ror	r24
 502:	97 f9       	bld	r25, 7
 504:	08 95       	ret

00000506 <__fp_inf>:
 506:	97 f9       	bld	r25, 7
 508:	9f 67       	ori	r25, 0x7F	; 127
 50a:	80 e8       	ldi	r24, 0x80	; 128
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	08 95       	ret

00000512 <__fp_nan>:
 512:	9f ef       	ldi	r25, 0xFF	; 255
 514:	80 ec       	ldi	r24, 0xC0	; 192
 516:	08 95       	ret

00000518 <__fp_pscA>:
 518:	00 24       	eor	r0, r0
 51a:	0a 94       	dec	r0
 51c:	16 16       	cp	r1, r22
 51e:	17 06       	cpc	r1, r23
 520:	18 06       	cpc	r1, r24
 522:	09 06       	cpc	r0, r25
 524:	08 95       	ret

00000526 <__fp_pscB>:
 526:	00 24       	eor	r0, r0
 528:	0a 94       	dec	r0
 52a:	12 16       	cp	r1, r18
 52c:	13 06       	cpc	r1, r19
 52e:	14 06       	cpc	r1, r20
 530:	05 06       	cpc	r0, r21
 532:	08 95       	ret

00000534 <__fp_round>:
 534:	09 2e       	mov	r0, r25
 536:	03 94       	inc	r0
 538:	00 0c       	add	r0, r0
 53a:	11 f4       	brne	.+4      	; 0x540 <__fp_round+0xc>
 53c:	88 23       	and	r24, r24
 53e:	52 f0       	brmi	.+20     	; 0x554 <__fp_round+0x20>
 540:	bb 0f       	add	r27, r27
 542:	40 f4       	brcc	.+16     	; 0x554 <__fp_round+0x20>
 544:	bf 2b       	or	r27, r31
 546:	11 f4       	brne	.+4      	; 0x54c <__fp_round+0x18>
 548:	60 ff       	sbrs	r22, 0
 54a:	04 c0       	rjmp	.+8      	; 0x554 <__fp_round+0x20>
 54c:	6f 5f       	subi	r22, 0xFF	; 255
 54e:	7f 4f       	sbci	r23, 0xFF	; 255
 550:	8f 4f       	sbci	r24, 0xFF	; 255
 552:	9f 4f       	sbci	r25, 0xFF	; 255
 554:	08 95       	ret

00000556 <__fp_split3>:
 556:	57 fd       	sbrc	r21, 7
 558:	90 58       	subi	r25, 0x80	; 128
 55a:	44 0f       	add	r20, r20
 55c:	55 1f       	adc	r21, r21
 55e:	59 f0       	breq	.+22     	; 0x576 <__fp_splitA+0x10>
 560:	5f 3f       	cpi	r21, 0xFF	; 255
 562:	71 f0       	breq	.+28     	; 0x580 <__fp_splitA+0x1a>
 564:	47 95       	ror	r20

00000566 <__fp_splitA>:
 566:	88 0f       	add	r24, r24
 568:	97 fb       	bst	r25, 7
 56a:	99 1f       	adc	r25, r25
 56c:	61 f0       	breq	.+24     	; 0x586 <__fp_splitA+0x20>
 56e:	9f 3f       	cpi	r25, 0xFF	; 255
 570:	79 f0       	breq	.+30     	; 0x590 <__fp_splitA+0x2a>
 572:	87 95       	ror	r24
 574:	08 95       	ret
 576:	12 16       	cp	r1, r18
 578:	13 06       	cpc	r1, r19
 57a:	14 06       	cpc	r1, r20
 57c:	55 1f       	adc	r21, r21
 57e:	f2 cf       	rjmp	.-28     	; 0x564 <__fp_split3+0xe>
 580:	46 95       	lsr	r20
 582:	f1 df       	rcall	.-30     	; 0x566 <__fp_splitA>
 584:	08 c0       	rjmp	.+16     	; 0x596 <__fp_splitA+0x30>
 586:	16 16       	cp	r1, r22
 588:	17 06       	cpc	r1, r23
 58a:	18 06       	cpc	r1, r24
 58c:	99 1f       	adc	r25, r25
 58e:	f1 cf       	rjmp	.-30     	; 0x572 <__fp_splitA+0xc>
 590:	86 95       	lsr	r24
 592:	71 05       	cpc	r23, r1
 594:	61 05       	cpc	r22, r1
 596:	08 94       	sec
 598:	08 95       	ret

0000059a <__fp_zero>:
 59a:	e8 94       	clt

0000059c <__fp_szero>:
 59c:	bb 27       	eor	r27, r27
 59e:	66 27       	eor	r22, r22
 5a0:	77 27       	eor	r23, r23
 5a2:	cb 01       	movw	r24, r22
 5a4:	97 f9       	bld	r25, 7
 5a6:	08 95       	ret

000005a8 <__divmodsi4>:
 5a8:	05 2e       	mov	r0, r21
 5aa:	97 fb       	bst	r25, 7
 5ac:	1e f4       	brtc	.+6      	; 0x5b4 <__divmodsi4+0xc>
 5ae:	00 94       	com	r0
 5b0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__negsi2>
 5b4:	57 fd       	sbrc	r21, 7
 5b6:	07 d0       	rcall	.+14     	; 0x5c6 <__divmodsi4_neg2>
 5b8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <__udivmodsi4>
 5bc:	07 fc       	sbrc	r0, 7
 5be:	03 d0       	rcall	.+6      	; 0x5c6 <__divmodsi4_neg2>
 5c0:	4e f4       	brtc	.+18     	; 0x5d4 <__divmodsi4_exit>
 5c2:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__negsi2>

000005c6 <__divmodsi4_neg2>:
 5c6:	50 95       	com	r21
 5c8:	40 95       	com	r20
 5ca:	30 95       	com	r19
 5cc:	21 95       	neg	r18
 5ce:	3f 4f       	sbci	r19, 0xFF	; 255
 5d0:	4f 4f       	sbci	r20, 0xFF	; 255
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255

000005d4 <__divmodsi4_exit>:
 5d4:	08 95       	ret

000005d6 <__negsi2>:
 5d6:	90 95       	com	r25
 5d8:	80 95       	com	r24
 5da:	70 95       	com	r23
 5dc:	61 95       	neg	r22
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	08 95       	ret

000005e6 <__udivmodsi4>:
 5e6:	a1 e2       	ldi	r26, 0x21	; 33
 5e8:	1a 2e       	mov	r1, r26
 5ea:	aa 1b       	sub	r26, r26
 5ec:	bb 1b       	sub	r27, r27
 5ee:	fd 01       	movw	r30, r26
 5f0:	0d c0       	rjmp	.+26     	; 0x60c <__udivmodsi4_ep>

000005f2 <__udivmodsi4_loop>:
 5f2:	aa 1f       	adc	r26, r26
 5f4:	bb 1f       	adc	r27, r27
 5f6:	ee 1f       	adc	r30, r30
 5f8:	ff 1f       	adc	r31, r31
 5fa:	a2 17       	cp	r26, r18
 5fc:	b3 07       	cpc	r27, r19
 5fe:	e4 07       	cpc	r30, r20
 600:	f5 07       	cpc	r31, r21
 602:	20 f0       	brcs	.+8      	; 0x60c <__udivmodsi4_ep>
 604:	a2 1b       	sub	r26, r18
 606:	b3 0b       	sbc	r27, r19
 608:	e4 0b       	sbc	r30, r20
 60a:	f5 0b       	sbc	r31, r21

0000060c <__udivmodsi4_ep>:
 60c:	66 1f       	adc	r22, r22
 60e:	77 1f       	adc	r23, r23
 610:	88 1f       	adc	r24, r24
 612:	99 1f       	adc	r25, r25
 614:	1a 94       	dec	r1
 616:	69 f7       	brne	.-38     	; 0x5f2 <__udivmodsi4_loop>
 618:	60 95       	com	r22
 61a:	70 95       	com	r23
 61c:	80 95       	com	r24
 61e:	90 95       	com	r25
 620:	9b 01       	movw	r18, r22
 622:	ac 01       	movw	r20, r24
 624:	bd 01       	movw	r22, r26
 626:	cf 01       	movw	r24, r30
 628:	08 95       	ret

0000062a <_exit>:
 62a:	f8 94       	cli

0000062c <__stop_program>:
 62c:	ff cf       	rjmp	.-2      	; 0x62c <__stop_program>
